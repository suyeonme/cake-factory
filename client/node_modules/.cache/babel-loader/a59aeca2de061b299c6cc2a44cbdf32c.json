{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/playground/cake-factory/client/src/pages/CakeCollection.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Modal from '@material-ui/core/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContent = styled.div`\n  width: 30%;\n  position: absolute;\n  bottom: 50%;\n  right: 50%;\n  transform: translate(50%, 50%);\n  background: white;\n  padding: 10px;\n  border-radius: 4px;\n`;\n_c = ModalContent;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input,\n  textarea {\n    margin-bottom: 10px;\n  }\n`;\n_c2 = Form;\nconst INITIAL_COLLECTION = {\n  title: '',\n  description: '',\n  image: ''\n};\n\nconst CakeCollection = () => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [collection, setCollection] = useState(INITIAL_COLLECTION);\n  const {\n    title,\n    description,\n    image\n  } = collection;\n\n  const onToggleModal = () => {\n    setShowModal(show => !show);\n    onClear();\n  };\n\n  const onImageChange = event => {\n    var _event$target, _event$target2;\n\n    if ((event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.files) && (event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.files[0])) {\n      const img = event.target.files[0];\n      const imgUrl = URL.createObjectURL(img);\n      setCollection(collection => ({ ...collection,\n        image: imgUrl\n      }));\n    }\n  };\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCollection(collection => ({ ...collection,\n      [name]: value\n    }));\n  };\n\n  const onAddCake = async cake => {\n    const {\n      title,\n      description,\n      image\n    } = cake;\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('image', image);\n\n    try {\n      const res = await axios.post('/collection/add', formData, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      });\n\n      if (res === null || res === void 0 ? void 0 : res.data) {\n        console.log(res === null || res === void 0 ? void 0 : res.data);\n      }\n    } catch (error) {\n      console.error(error === null || error === void 0 ? void 0 : error.message);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    onAddCake(collection);\n    onClear();\n    onToggleModal();\n  };\n\n  const onClear = () => {\n    setCollection(INITIAL_COLLECTION);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onToggleModal,\n      children: \"Add a collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showModal,\n      onClose: onToggleModal,\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add a new cake.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"title\",\n            type: \"text\",\n            placeholder: \"Title\",\n            value: title,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            placeholder: \"Description\",\n            value: description,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/jpg,impge/png,image/jpeg\",\n            name: \"file\",\n            onChange: onImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CakeCollection, \"xQzQwuJeQ2EtodpYH7EmxP/+Ry4=\");\n\n_c3 = CakeCollection;\nexport default CakeCollection; // import React, { useState } from 'react';\n// import axios from 'axios';\n// import styled from 'styled-components';\n// import Modal from '@material-ui/core/Modal';\n// const ModalContent = styled.div`\n//   width: 30%;\n//   position: absolute;\n//   bottom: 50%;\n//   right: 50%;\n//   transform: translate(50%, 50%);\n//   background: white;\n//   padding: 10px;\n//   border-radius: 4px;\n// `;\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   input,\n//   textarea {\n//     margin-bottom: 10px;\n//   }\n// `;\n// interface CollectionType {\n//   title: string;\n//   description: string;\n//   image: string;\n// }\n// const INITIAL_COLLECTION = {\n//   title: '',\n//   description: '',\n//   image: '',\n// };\n// const CakeCollection = () => {\n//   const [showModal, setShowModal] = useState(false);\n//   const [collection, setCollection] =\n//     useState<CollectionType>(INITIAL_COLLECTION);\n//   const { title, description, image } = collection;\n//   const onToggleModal = (): void => {\n//     setShowModal((show: boolean) => !show);\n//     onClear();\n//   };\n//   const onImageChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n//     if (event?.target?.files && event?.target?.files[0]) {\n//       const img = event.target.files[0];\n//       const imgUrl = URL.createObjectURL(img);\n//       setCollection(collection => ({\n//         ...collection,\n//         image: imgUrl,\n//       }));\n//     }\n//   };\n//   const onChange = (e: React.ChangeEvent<HTMLElement>) => {\n//     const { name, value } = e.target as any;\n//     setCollection(collection => ({\n//       ...collection,\n//       [name]: value,\n//     }));\n//   };\n//   const onAddCake = async (cake: CollectionType): Promise<void> => {\n//     const { title, description, image } = cake;\n//     const formData = new FormData();\n//     formData.append('title', title);\n//     formData.append('description', description);\n//     formData.append('image', image);\n//     try {\n//       const res = await axios.post('/collection/add', formData, {\n//         headers: { 'content-type': 'multipart/form-data' },\n//       });\n//       if (res?.data) {\n//         console.log(res?.data);\n//       }\n//     } catch (error) {\n//       console.error(error?.message);\n//     }\n//   };\n//   const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n//     e.preventDefault();\n//     onAddCake(collection);\n//     onClear();\n//     onToggleModal();\n//   };\n//   const onClear = () => {\n//     setCollection(INITIAL_COLLECTION);\n//   };\n//   return (\n//     <section>\n//       <button onClick={onToggleModal}>Add a collection</button>\n//       <Modal open={showModal} onClose={onToggleModal}>\n//         <ModalContent>\n//           {/* <img src={image} alt=\"test\" /> */}\n//           <h1>Add a new cake.</h1>\n//           <Form onSubmit={onSubmit}>\n//             <input\n//               name=\"title\"\n//               type=\"text\"\n//               placeholder=\"Title\"\n//               value={title}\n//               onChange={onChange}\n//             />\n//             <textarea\n//               name=\"description\"\n//               placeholder=\"Description\"\n//               value={description}\n//               onChange={onChange}\n//             />\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               name=\"file\"\n//               onChange={onImageChange}\n//             />\n//             <button>Add</button>\n//           </Form>\n//         </ModalContent>\n//       </Modal>\n//     </section>\n//   );\n// };\n// export default CakeCollection;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ModalContent\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"CakeCollection\");","map":{"version":3,"sources":["/Users/suyeonkang/playground/cake-factory/client/src/pages/CakeCollection.tsx"],"names":["React","useState","axios","styled","Modal","ModalContent","div","Form","form","INITIAL_COLLECTION","title","description","image","CakeCollection","showModal","setShowModal","collection","setCollection","onToggleModal","show","onClear","onImageChange","event","target","files","img","imgUrl","URL","createObjectURL","onChange","e","name","value","onAddCake","cake","formData","FormData","append","res","post","headers","data","console","log","error","message","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Modal from '@material-ui/core/Modal';\n\nconst ModalContent = styled.div`\n  width: 30%;\n  position: absolute;\n  bottom: 50%;\n  right: 50%;\n  transform: translate(50%, 50%);\n  background: white;\n  padding: 10px;\n  border-radius: 4px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input,\n  textarea {\n    margin-bottom: 10px;\n  }\n`;\n\ninterface CollectionType {\n  title: string;\n  description: string;\n  image: string;\n}\n\nconst INITIAL_COLLECTION = {\n  title: '',\n  description: '',\n  image: '',\n};\n\nconst CakeCollection = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [collection, setCollection] =\n    useState<CollectionType>(INITIAL_COLLECTION);\n\n  const { title, description, image } = collection;\n\n  const onToggleModal = (): void => {\n    setShowModal((show: boolean) => !show);\n    onClear();\n  };\n\n  const onImageChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (event?.target?.files && event?.target?.files[0]) {\n      const img = event.target.files[0];\n      const imgUrl = URL.createObjectURL(img);\n      setCollection(collection => ({\n        ...collection,\n        image: imgUrl,\n      }));\n    }\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLElement>) => {\n    const { name, value } = e.target as any;\n    setCollection(collection => ({\n      ...collection,\n      [name]: value,\n    }));\n  };\n\n  const onAddCake = async (cake: CollectionType): Promise<void> => {\n    const { title, description, image } = cake;\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('image', image);\n\n    try {\n      const res = await axios.post('/collection/add', formData, {\n        headers: { 'content-type': 'multipart/form-data' },\n      });\n      if (res?.data) {\n        console.log(res?.data);\n      }\n    } catch (error) {\n      console.error(error?.message);\n    }\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    onAddCake(collection);\n    onClear();\n    onToggleModal();\n  };\n\n  const onClear = () => {\n    setCollection(INITIAL_COLLECTION);\n  };\n\n  return (\n    <section>\n      <button onClick={onToggleModal}>Add a collection</button>\n      <Modal open={showModal} onClose={onToggleModal}>\n        <ModalContent>\n          {/* <img src={image} alt=\"test\" /> */}\n          <h1>Add a new cake.</h1>\n          <Form onSubmit={onSubmit}>\n            <input\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={onChange}\n            />\n            <textarea\n              name=\"description\"\n              placeholder=\"Description\"\n              value={description}\n              onChange={onChange}\n            />\n            <input\n              type=\"file\"\n              accept=\"image/jpg,impge/png,image/jpeg\"\n              name=\"file\"\n              onChange={onImageChange}\n            />\n            <button>Add</button>\n          </Form>\n        </ModalContent>\n      </Modal>\n    </section>\n  );\n};\n\nexport default CakeCollection;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import styled from 'styled-components';\n// import Modal from '@material-ui/core/Modal';\n\n// const ModalContent = styled.div`\n//   width: 30%;\n//   position: absolute;\n//   bottom: 50%;\n//   right: 50%;\n//   transform: translate(50%, 50%);\n//   background: white;\n//   padding: 10px;\n//   border-radius: 4px;\n// `;\n\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n\n//   input,\n//   textarea {\n//     margin-bottom: 10px;\n//   }\n// `;\n\n// interface CollectionType {\n//   title: string;\n//   description: string;\n//   image: string;\n// }\n\n// const INITIAL_COLLECTION = {\n//   title: '',\n//   description: '',\n//   image: '',\n// };\n\n// const CakeCollection = () => {\n//   const [showModal, setShowModal] = useState(false);\n//   const [collection, setCollection] =\n//     useState<CollectionType>(INITIAL_COLLECTION);\n\n//   const { title, description, image } = collection;\n\n//   const onToggleModal = (): void => {\n//     setShowModal((show: boolean) => !show);\n//     onClear();\n//   };\n\n//   const onImageChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n//     if (event?.target?.files && event?.target?.files[0]) {\n//       const img = event.target.files[0];\n//       const imgUrl = URL.createObjectURL(img);\n//       setCollection(collection => ({\n//         ...collection,\n//         image: imgUrl,\n//       }));\n//     }\n//   };\n\n//   const onChange = (e: React.ChangeEvent<HTMLElement>) => {\n//     const { name, value } = e.target as any;\n//     setCollection(collection => ({\n//       ...collection,\n//       [name]: value,\n//     }));\n//   };\n\n//   const onAddCake = async (cake: CollectionType): Promise<void> => {\n//     const { title, description, image } = cake;\n//     const formData = new FormData();\n//     formData.append('title', title);\n//     formData.append('description', description);\n//     formData.append('image', image);\n\n//     try {\n//       const res = await axios.post('/collection/add', formData, {\n//         headers: { 'content-type': 'multipart/form-data' },\n//       });\n//       if (res?.data) {\n//         console.log(res?.data);\n//       }\n//     } catch (error) {\n//       console.error(error?.message);\n//     }\n//   };\n\n//   const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n//     e.preventDefault();\n//     onAddCake(collection);\n//     onClear();\n//     onToggleModal();\n//   };\n\n//   const onClear = () => {\n//     setCollection(INITIAL_COLLECTION);\n//   };\n\n//   return (\n//     <section>\n//       <button onClick={onToggleModal}>Add a collection</button>\n//       <Modal open={showModal} onClose={onToggleModal}>\n//         <ModalContent>\n//           {/* <img src={image} alt=\"test\" /> */}\n//           <h1>Add a new cake.</h1>\n//           <Form onSubmit={onSubmit}>\n//             <input\n//               name=\"title\"\n//               type=\"text\"\n//               placeholder=\"Title\"\n//               value={title}\n//               onChange={onChange}\n//             />\n//             <textarea\n//               name=\"description\"\n//               placeholder=\"Description\"\n//               value={description}\n//               onChange={onChange}\n//             />\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               name=\"file\"\n//               onChange={onImageChange}\n//             />\n//             <button>Add</button>\n//           </Form>\n//         </ModalContent>\n//       </Modal>\n//     </section>\n//   );\n// };\n\n// export default CakeCollection;\n"]},"metadata":{},"sourceType":"module"}