{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/playground/cake-factory/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport axios from 'axios';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Routes from './routers/Routes';\nimport Layout from './components/Layout/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['Arial', '\"Apple Color Emoji\"'].join(',')\n  }\n});\n\nconst App = () => {\n  _s();\n\n  const [isAuth, setIsAuth] = useState(false);\n  const handleCheckAuth = useCallback(async () => {\n    const res = await axios('/signin_get');\n    const token = await res.data.token;\n\n    if (token) {\n      setIsAuth(true);\n    }\n  }, []);\n  useEffect(() => {\n    handleCheckAuth();\n  }, [handleCheckAuth]);\n  const commonProps = useMemo(() => ({\n    isAuth,\n    setIsAuth\n  }), [isAuth]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Layout, { ...commonProps,\n        children: /*#__PURE__*/_jsxDEV(Routes, { ...commonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"uhtMmZ6PzDHqjFv0yYkWCnrZw2Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/suyeonkang/playground/cake-factory/client/src/App.tsx"],"names":["React","useState","useEffect","useCallback","useMemo","BrowserRouter","Router","axios","createMuiTheme","ThemeProvider","Routes","Layout","theme","typography","fontFamily","join","App","isAuth","setIsAuth","handleCheckAuth","res","token","data","commonProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,OAAlD,QAAiE,OAAjE;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,KAAK,GAAGJ,cAAc,CAAC;AAC3BK,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAE,CAAC,OAAD,EAAU,qBAAV,EAAiCC,IAAjC,CAAsC,GAAtC;AADF;AADe,CAAD,CAA5B;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMkB,eAAe,GAAGhB,WAAW,CAAC,YAAY;AAC9C,UAAMiB,GAAG,GAAG,MAAMb,KAAK,CAAC,aAAD,CAAvB;AACA,UAAMc,KAAK,GAAG,MAAMD,GAAG,CAACE,IAAJ,CAASD,KAA7B;;AACA,QAAIA,KAAJ,EAAW;AACTH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GANkC,EAMhC,EANgC,CAAnC;AAQAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,eAAe;AAChB,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;AAIA,QAAMI,WAAW,GAAGnB,OAAO,CACzB,OAAO;AACLa,IAAAA,MADK;AAELC,IAAAA;AAFK,GAAP,CADyB,EAKzB,CAACD,MAAD,CALyB,CAA3B;AAQA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,KAAtB;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD,OAAYW,WAAZ;AAAA,+BACE,QAAC,MAAD,OAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhCD;;GAAMP,G;;KAAAA,G;AAkCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport axios from 'axios';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport Routes from './routers/Routes';\nimport Layout from './components/Layout/Layout';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['Arial', '\"Apple Color Emoji\"'].join(','),\n  },\n});\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState(false);\n\n  const handleCheckAuth = useCallback(async () => {\n    const res = await axios('/signin_get');\n    const token = await res.data.token;\n    if (token) {\n      setIsAuth(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    handleCheckAuth();\n  }, [handleCheckAuth]);\n\n  const commonProps = useMemo(\n    () => ({\n      isAuth,\n      setIsAuth,\n    }),\n    [isAuth]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout {...commonProps}>\n          <Routes {...commonProps} />\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}