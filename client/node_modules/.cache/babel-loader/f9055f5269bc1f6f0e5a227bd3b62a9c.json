{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/playground/cake-factory/client/src/components/SignForm/SigninForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { Wrapper, Title, StyledLink } from './SignFormStyle';\nimport { validationSchema } from '../../utils/authSchema';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SigninForm = ({\n  showPassword,\n  onToggle\n}) => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {// alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Signip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"email\",\n          name: \"email\",\n          label: \"Email\",\n          variant: \"outlined\",\n          required: true,\n          autoFocus: true,\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          type: showPassword ? 'text' : 'password',\n          variant: \"outlined\",\n          required: true,\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          helperText: formik.touched.password && formik.errors.password,\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: onToggle,\n                edge: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          type: \"submit\",\n          children: \"Signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(StyledLink, {\n            to: \"/\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n            to: \"/signup\",\n            children: \"Don't have an account? Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SigninForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = SigninForm;\nexport default SigninForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninForm\");","map":{"version":3,"sources":["/Users/suyeonkang/playground/cake-factory/client/src/components/SignForm/SigninForm.tsx"],"names":["React","useFormik","Button","TextField","IconButton","InputAdornment","Visibility","VisibilityOff","Wrapper","Title","StyledLink","validationSchema","SigninForm","showPassword","onToggle","formik","initialValues","email","password","onSubmit","values","handleSubmit","display","flexDirection","handleChange","touched","Boolean","errors","endAdornment","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { Wrapper, Title, StyledLink } from './SignFormStyle';\nimport { validationSchema } from '../../utils/authSchema';\n\ninterface SigninFormProps {\n  showPassword: boolean;\n  onToggle: () => void;\n}\n\nconst SigninForm = ({ showPassword, onToggle }: SigninFormProps) => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      // alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <Wrapper>\n      <Title>Signip</Title>\n      <form onSubmit={formik.handleSubmit}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <TextField\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n            required\n            autoFocus\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            variant=\"outlined\"\n            required\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={onToggle}\n                    edge=\"end\">\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            Signin\n          </Button>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <StyledLink to=\"/\">Forgot password?</StyledLink>\n            <StyledLink to=\"/signup\">Don't have an account? Sign Up</StyledLink>\n          </div>\n        </div>\n      </form>\n    </Wrapper>\n  );\n};\n\nexport default SigninForm;\n"]},"metadata":{},"sourceType":"module"}