{"ast":null,"code":"var _jsxFileName = \"/Users/suyeonkang/playground/cake-factory/client/src/components/SignForm/SignupForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Wrapper, Title, StyledLink } from './SignFormStyle';\nimport { validationSchema } from '../../utils/authSchema';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = ({\n  showPassword,\n  onToggle,\n  onSubmit\n}) => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => onSubmit(values)\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"firstName\",\n            label: \"First Name\",\n            name: \"firstName\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            autoFocus: true,\n            value: formik.values.firstName,\n            onChange: formik.handleChange,\n            error: formik.touched.firstName && Boolean(formik.errors.firstName),\n            helperText: formik.touched.firstName && formik.errors.firstName,\n            style: {\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"lastName\",\n            label: \"Last Name\",\n            name: \"lastName\",\n            autoComplete: \"lname\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            value: formik.values.lastName,\n            onChange: formik.handleChange,\n            error: formik.touched.lastName && Boolean(formik.errors.lastName),\n            helperText: formik.touched.lastName && formik.errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"email\",\n          name: \"email\",\n          label: \"Email\",\n          variant: \"outlined\",\n          required: true,\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          type: showPassword ? 'text' : 'password',\n          variant: \"outlined\",\n          required: true,\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          helperText: formik.touched.password && formik.errors.password,\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: onToggle,\n                edge: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"allowExtraEmails\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 22\n          }, this),\n          label: \"I swear, I am a big fan of all cakes \\uD83C\\uDF70\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          type: \"submit\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n          to: \"/signin\",\n          children: \"Already have an account? Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/suyeonkang/playground/cake-factory/client/src/components/SignForm/SignupForm.tsx"],"names":["React","useFormik","Button","TextField","IconButton","InputAdornment","Visibility","VisibilityOff","FormControlLabel","Checkbox","Wrapper","Title","StyledLink","validationSchema","SignupForm","showPassword","onToggle","onSubmit","formik","initialValues","firstName","lastName","email","password","values","handleSubmit","display","flexDirection","handleChange","touched","Boolean","errors","marginRight","endAdornment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Wrapper, Title, StyledLink } from './SignFormStyle';\nimport { validationSchema } from '../../utils/authSchema';\n\nexport interface UserType {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n}\n\ninterface SigninFormProps {\n  showPassword: boolean;\n  onToggle: () => void;\n  onSubmit: (values: UserType) => void;\n}\n\nconst SignupForm = ({ showPassword, onToggle, onSubmit }: SigninFormProps) => {\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values: UserType) => onSubmit(values),\n  });\n\n  return (\n    <Wrapper>\n      <Title>Signup</Title>\n      <form onSubmit={formik.handleSubmit}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div style={{ display: 'flex' }}>\n            <TextField\n              id=\"firstName\"\n              label=\"First Name\"\n              name=\"firstName\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              autoFocus\n              value={formik.values.firstName}\n              onChange={formik.handleChange}\n              error={\n                formik.touched.firstName && Boolean(formik.errors.firstName)\n              }\n              helperText={formik.touched.firstName && formik.errors.firstName}\n              style={{ marginRight: '10px' }}\n            />\n            <TextField\n              id=\"lastName\"\n              label=\"Last Name\"\n              name=\"lastName\"\n              autoComplete=\"lname\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              value={formik.values.lastName}\n              onChange={formik.handleChange}\n              error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n              helperText={formik.touched.lastName && formik.errors.lastName}\n            />\n          </div>\n          <TextField\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n            required\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            variant=\"outlined\"\n            required\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={onToggle}\n                    edge=\"end\">\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n            label=\"I swear, I am a big fan of all cakes 🍰\"\n          />\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            Signup\n          </Button>\n          <StyledLink to=\"/signin\">Already have an account? Sign in</StyledLink>\n        </div>\n      </form>\n    </Wrapper>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}